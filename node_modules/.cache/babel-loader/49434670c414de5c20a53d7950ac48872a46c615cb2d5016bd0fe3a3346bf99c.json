{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\react-js-projects\\\\country\\\\src\\\\components\\\\CountryInfo\\\\CountryInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiURL } from '../util/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  const [country, setCountry] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    countryName\n  } = useParams();\n  const getCountryByName = async () => {\n    try {\n      const res = await fetch(`${apiURL}/name/${countryName}`);\n      if (!res.ok) throw new Error('Could not found!');\n      const data = await res.json();\n      setCountry(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"CountryInfo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"e40PNpKmO3SyrZ44DK98wCi4DAg=\", false, function () {\n  return [useParams];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","apiURL","CountryInfo","country","setCountry","isLoading","setIsLoading","error","setError","countryName","getCountryByName","res","fetch","ok","Error","data","json","message"],"sources":["C:/Users/User/Documents/react-js-projects/country/src/components/CountryInfo/CountryInfo.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { apiURL } from '../util/api'\r\n\r\nconst CountryInfo = () => {\r\n  \r\n  const [ country, setCountry] = useState([])\r\n  const [isLoading,setIsLoading] = useState(true)\r\n  const [error,setError] = useState('')\r\n\r\n  const {countryName} = useParams()\r\n\r\n  const getCountryByName = async() => {\r\n    try {\r\n      const res = await fetch(`${apiURL}/name/${countryName}`)\r\n\r\n      if(!res.ok) throw new Error('Could not found!')\r\n\r\n      const data = await res.json()\r\n\r\n      setCountry(data)\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n       setIsLoading(false)\r\n       setError(error.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>CountryInfo</div>\r\n  )\r\n}\r\n\r\nexport default CountryInfo"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,aAAa;AAAA;AAEpC,MAAMC,WAAW,GAAG,MAAM;EAAA;EAExB,MAAM,CAAEC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACO,SAAS,EAACC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC/C,MAAM,CAACS,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAM;IAACW;EAAW,CAAC,GAAGT,SAAS,EAAE;EAEjC,MAAMU,gBAAgB,GAAG,YAAW;IAClC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEX,MAAO,SAAQQ,WAAY,EAAC,CAAC;MAExD,IAAG,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;MAE/C,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;MAE7BZ,UAAU,CAACW,IAAI,CAAC;MAChBT,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACbD,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;IAC1B;EACF,CAAC;EAED,oBACE;IAAA,UAAK;EAAW;IAAA;IAAA;IAAA;EAAA,QAAM;AAE1B,CAAC;AAAA,GA3BKf,WAAW;EAAA,QAMOF,SAAS;AAAA;AAAA,KAN3BE,WAAW;AA6BjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}