{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\react-js-projects\\\\country\\\\src\\\\components\\\\CountryInfo\\\\CountryInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiURL } from '../util/api';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  const [country, setCountry] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    countryName\n  } = useParams();\n  useEffect(() => {\n    const getCountryByName = async () => {\n      try {\n        const res = await fetch(`${apiURL}/name/${countryName}`);\n        if (!res.ok) throw new Error('Could not found!');\n        const data = await res.json();\n        setCountry(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(error.message);\n      }\n    };\n    getCountryByName();\n  }, [countryName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country__info__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }, this), error && !isLoading && {\n      error\n    }, country.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__info__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__info-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: country.flags.png,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__info-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Population: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Intl.NumberFormat().format(country.population)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Capital: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: country.capital\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: country.region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: country === null || country === void 0 ? void 0 : country.currencies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"Qd1lv9bAO5MYf67qXDHcv505C38=\", false, function () {\n  return [useParams];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","apiURL","Link","CountryInfo","country","setCountry","isLoading","setIsLoading","error","setError","countryName","getCountryByName","res","fetch","ok","Error","data","json","message","map","index","flags","png","name","common","Intl","NumberFormat","format","population","capital","region","currencies"],"sources":["C:/Users/User/Documents/react-js-projects/country/src/components/CountryInfo/CountryInfo.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { apiURL } from '../util/api'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CountryInfo = () => {\r\n  \r\n  const [ country, setCountry] = useState([])\r\n  const [isLoading,setIsLoading] = useState(true)\r\n  const [error,setError] = useState('')\r\n\r\n  const {countryName} = useParams()\r\n\r\n \r\n  useEffect(() => {\r\n    const getCountryByName = async() => {\r\n      try {\r\n        const res = await fetch(`${apiURL}/name/${countryName}`)\r\n  \r\n        if(!res.ok) throw new Error('Could not found!')\r\n  \r\n        const data = await res.json()\r\n  \r\n        setCountry(data)\r\n        setIsLoading(false)\r\n      } catch (error) {\r\n         setIsLoading(false)\r\n         setError(error.message)\r\n      }\r\n    }\r\n    getCountryByName()\r\n  },[countryName])\r\n\r\n  return (\r\n    <div className='country__info__wrapper'>\r\n      <button>\r\n        <Link to='/'>\r\n          Back\r\n        </Link>\r\n        </button>\r\n\r\n        {isLoading && !error && <h4>Loading ...</h4>}\r\n        {error && !isLoading && {error}}\r\n\r\n      {country.map((country,index) => (\r\n        <div className='country__info__container' key={index}>\r\n          <div className='country__info-img'>\r\n            <img src={country.flags.png} alt='' />\r\n          </div>\r\n          <div className='country__info'>\r\n            <h3>{country.name.common}</h3>\r\n            <div className='country__info-left'>\r\n              <h5>Population: <span>{new Intl.NumberFormat().format(country.population)}</span></h5>\r\n              <h5>Capital: <span>{country.capital}</span></h5>\r\n              <h5>Region: <span>{country.region}</span></h5>\r\n              <h5>Region: <span>{country?.currencies}</span></h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n           ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountryInfo"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,IAAI,QAAQ,kBAAkB;AAAA;AAEvC,MAAMC,WAAW,GAAG,MAAM;EAAA;EAExB,MAAM,CAAEC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC/C,MAAM,CAACU,KAAK,EAACC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAM;IAACY;EAAW,CAAC,GAAGV,SAAS,EAAE;EAGjCD,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAG,YAAW;MAClC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEZ,MAAO,SAAQS,WAAY,EAAC,CAAC;QAExD,IAAG,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;QAE/C,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;QAE7BZ,UAAU,CAACW,IAAI,CAAC;QAChBT,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACbD,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;MAC1B;IACF,CAAC;IACDP,gBAAgB,EAAE;EACpB,CAAC,EAAC,CAACD,WAAW,CAAC,CAAC;EAEhB,oBACE;IAAK,SAAS,EAAC,wBAAwB;IAAA,wBACrC;MAAA,uBACE,QAAC,IAAI;QAAC,EAAE,EAAC,GAAG;QAAA,UAAC;MAEb;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QACE,EAERJ,SAAS,IAAI,CAACE,KAAK,iBAAI;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,EAC3CA,KAAK,IAAI,CAACF,SAAS,IAAI;MAACE;IAAK,CAAC,EAEhCJ,OAAO,CAACe,GAAG,CAAC,CAACf,OAAO,EAACgB,KAAK,kBACzB;MAAK,SAAS,EAAC,0BAA0B;MAAA,wBACvC;QAAK,SAAS,EAAC,mBAAmB;QAAA,uBAChC;UAAK,GAAG,EAAEhB,OAAO,CAACiB,KAAK,CAACC,GAAI;UAAC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAClC,eACN;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAA,UAAKlB,OAAO,CAACmB,IAAI,CAACC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAM,eAC9B;UAAK,SAAS,EAAC,oBAAoB;UAAA,wBACjC;YAAA,WAAI,cAAY;cAAA,UAAO,IAAIC,IAAI,CAACC,YAAY,EAAE,CAACC,MAAM,CAACvB,OAAO,CAACwB,UAAU;YAAC;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eACtF;YAAA,WAAI,WAAS;cAAA,UAAOxB,OAAO,CAACyB;YAAO;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eAChD;YAAA,WAAI,UAAQ;cAAA,UAAOzB,OAAO,CAAC0B;YAAM;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eAC9C;YAAA,WAAI,UAAQ;cAAA,UAAO1B,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE2B;YAAU;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAC/C;MAAA;QAAA;QAAA;QAAA;MAAA,QACF;IAAA,GAZuCX,KAAK;MAAA;MAAA;MAAA;IAAA,QAchD,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAA,GAzDKjB,WAAW;EAAA,QAMOH,SAAS;AAAA;AAAA,KAN3BG,WAAW;AA2DjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}